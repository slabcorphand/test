<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.co.vermore.mapper.UsefulMessageMapper" >
  <resultMap id="BaseResultMap" type="jp.co.vermore.entity.UsefulMessage" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="sort_score" property="sortScore" jdbcType="INTEGER" />
    <result column="excerpt" property="excerpt" jdbcType="VARCHAR" />
    <result column="publish_start" property="publishStart" jdbcType="TIMESTAMP" />
    <result column="publish_end" property="publishEnd" jdbcType="TIMESTAMP" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="del_flg" property="delFlg" jdbcType="BIT" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, uuid, `date`, `type`, title, sort_score, excerpt, publish_start, publish_end, 
    create_datetime, update_datetime, del_flg, note
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="jp.co.vermore.entity.UsefulMessageExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from useful_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from useful_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from useful_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.vermore.entity.UsefulMessageExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from useful_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.vermore.entity.UsefulMessage" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into useful_message (id, uuid, `date`, 
      `type`, title, sort_score, 
      excerpt, publish_start, publish_end, 
      create_datetime, update_datetime, del_flg, 
      note)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, #{sortScore,jdbcType=INTEGER}, 
      #{excerpt,jdbcType=VARCHAR}, #{publishStart,jdbcType=TIMESTAMP}, #{publishEnd,jdbcType=TIMESTAMP}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{updateDatetime,jdbcType=TIMESTAMP}, #{delFlg,jdbcType=BIT}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jp.co.vermore.entity.UsefulMessage" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into useful_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="date != null" >
        `date`,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="sortScore != null" >
        sort_score,
      </if>
      <if test="excerpt != null" >
        excerpt,
      </if>
      <if test="publishStart != null" >
        publish_start,
      </if>
      <if test="publishEnd != null" >
        publish_end,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
      <if test="updateDatetime != null" >
        update_datetime,
      </if>
      <if test="delFlg != null" >
        del_flg,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sortScore != null" >
        #{sortScore,jdbcType=INTEGER},
      </if>
      <if test="excerpt != null" >
        #{excerpt,jdbcType=VARCHAR},
      </if>
      <if test="publishStart != null" >
        #{publishStart,jdbcType=TIMESTAMP},
      </if>
      <if test="publishEnd != null" >
        #{publishEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null" >
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlg != null" >
        #{delFlg,jdbcType=BIT},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.vermore.entity.UsefulMessageExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from useful_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update useful_message
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null" >
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        `date` = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.sortScore != null" >
        sort_score = #{record.sortScore,jdbcType=INTEGER},
      </if>
      <if test="record.excerpt != null" >
        excerpt = #{record.excerpt,jdbcType=VARCHAR},
      </if>
      <if test="record.publishStart != null" >
        publish_start = #{record.publishStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publishEnd != null" >
        publish_end = #{record.publishEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDatetime != null" >
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDatetime != null" >
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlg != null" >
        del_flg = #{record.delFlg,jdbcType=BIT},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update useful_message
    set id = #{record.id,jdbcType=INTEGER},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      `type` = #{record.type,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      sort_score = #{record.sortScore,jdbcType=INTEGER},
      excerpt = #{record.excerpt,jdbcType=VARCHAR},
      publish_start = #{record.publishStart,jdbcType=TIMESTAMP},
      publish_end = #{record.publishEnd,jdbcType=TIMESTAMP},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      del_flg = #{record.delFlg,jdbcType=BIT},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.vermore.entity.UsefulMessage" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update useful_message
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sortScore != null" >
        sort_score = #{sortScore,jdbcType=INTEGER},
      </if>
      <if test="excerpt != null" >
        excerpt = #{excerpt,jdbcType=VARCHAR},
      </if>
      <if test="publishStart != null" >
        publish_start = #{publishStart,jdbcType=TIMESTAMP},
      </if>
      <if test="publishEnd != null" >
        publish_end = #{publishEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null" >
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlg != null" >
        del_flg = #{delFlg,jdbcType=BIT},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.vermore.entity.UsefulMessage" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update useful_message
    set uuid = #{uuid,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      sort_score = #{sortScore,jdbcType=INTEGER},
      excerpt = #{excerpt,jdbcType=VARCHAR},
      publish_start = #{publishStart,jdbcType=TIMESTAMP},
      publish_end = #{publishEnd,jdbcType=TIMESTAMP},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      del_flg = #{delFlg,jdbcType=BIT},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getUsefulMessage" resultMap="BaseResultMap" parameterType="int">
    select id
    from useful_message
    where id = #{id}
  </select>

  <select id="getUsefulMessageByUuid" resultMap="BaseResultMap" parameterType="String">
    select *
    from useful_message
    where uuid = #{uuid}
  </select>

  <select id="getUsefulMapperMessagePre" resultMap="BaseResultMap" >
    select *
    from useful_message
    where date &lt; #{param1}
      and `type` between 1 and 3
      and del_flg = 0
      and publish_start &lt; #{param3}
      and publish_end &gt; #{param2}
    order by date desc
      LIMIT 1;
  </select>

  <select id="getUsefulMapperMessageNext" resultMap="BaseResultMap" >
    select *
    from useful_message
    where date &gt; #{param1}
      and `type` between 1 and 3
      and del_flg = 0
      and publish_start &lt; #{param3}
      and publish_end &gt; #{param2}
    order by date asc
      LIMIT 1;
  </select>

  <select id="getUsefulMessageMapperCategory" resultMap="BaseResultMap" parameterType="int">
    select uuid,date,type,title,excerpt
    from useful_message
    where type = #{param1}
      LIMIT #{param2} OFFSET #{param3};
  </select>

  <select id="getUsefulMessageJsonAll" resultMap="BaseResultMap">
    select uuid,date,type,title,sort_score,excerpt
    from useful_message
    where del_flg = 0 and `type` between 1 and 3
    and publish_start &lt; #{param3}
    and publish_end &gt; #{param2}
    <if test="param1 != 0 and param1 != 4 and param1 != 5" >
      and type = #{param1}
    </if>
    order by `date` desc
    LIMIT #{param4} OFFSET #{param5};
  </select>

  <select id="getUsefulMessageJsonAllByType" resultMap="BaseResultMap"  >
    select uuid,date,type,title,excerpt
    from useful_message
    where del_flg = 0 and `type` between 1 and 3
    and publish_start &lt; #{param3}
    and publish_end &gt; #{param2}
    <if test="param1 != 0" >
      and type = #{param1}
    </if>
    order by `date` desc
  </select>

  <select id="getUsefulMessageByIdAndType" resultMap="BaseResultMap" >
    select uuid,date,type,title,excerpt
    from useful_message
    where del_flg = 0
    <if test="param1 != 0" >
      and id = #{param1}
    </if>
    <if test="param2 != 0" >
      and type = #{param2}
    </if>
  </select>

  <select id="getUsefulMessageEventAll" resultMap="BaseResultMap">
    select uuid,date,type,title,sort_score,excerpt
    from useful_message
    where del_flg = 0
    and publish_start &lt; #{param3}
    and publish_end &gt;= #{param4}
    <if test="param1 != 0">
      and type = #{param1} OR type = #{param2}
    </if>
    LIMIT #{param5} OFFSET #{param6};
  </select>

  <select id="getUsefulMessageAll" resultMap="BaseResultMap">
    select uuid,date,type,title,sort_score,excerpt
    from useful_message
    where  `type` between 1 and 3 and del_flg = 0
    order by date desc
  </select>

  <select id="getUsefulMessageAllForTop" resultMap="BaseResultMap">
    select uuid,date,type,title,excerpt
    from useful_message
    where  `type` between 1 and 3 and del_flg = 0
      and publish_start &lt; #{param2}
      and publish_end &gt; #{param1}
    order by sort_score desc,`date`desc, create_datetime desc
      LIMIT 8
  </select>

  <insert id="insertUsefulMessage">
    insert into useful_message(
    uuid,
    date,
    type,
    title,
    sort_score,
    excerpt,
    publish_start,
    publish_end,
    create_datetime,
    update_datetime,
    del_flg,
    note
    ) values (
    #{uuid},
    #{date},
    #{type},
    #{title},
    #{sortScore},
    #{excerpt},
    #{publishStart},
    #{publishEnd},
    #{createDatetime},
    #{updateDatetime},
    #{delFlg},
    #{note}
    )
    <selectKey resultType="Long" keyProperty="id" order="AFTER">
      select @@IDENTITY
    </selectKey>
  </insert>

  <delete id="deleteUsefulMessage">
    update useful_message set del_flg = #{delFlg} where id = #{id}
  </delete>

  <update id="updateUsefulMessage">
    update useful_message
    set
      date = #{date},
      type = #{type},
      title = #{title},
      sort_score = #{sortScore},
      excerpt = #{excerpt},
      publish_start = #{publishStart},
      publish_end = #{publishEnd},
      create_datetime = #{createDatetime},
      update_datetime = #{updateDatetime},
      del_flg = #{delFlg},
      note = #{note}
    where id = #{id}
  </update>

  <select id="getUsefulMessageList" resultMap="BaseResultMap">
    select id,uuid,date,type,title,sort_score,excerpt,publish_start,publish_end
    from useful_message
    where del_flg = 0
      and id = #{id}
  </select>

  <select id="getUsefulMessageMapperAllByCondition" parameterType="jp.co.vermore.form.admin.UsefulMessageListForm" resultMap="BaseResultMap">
    select *
    from useful_message
    where del_flg = 0 and `type` between 1 and 3
    <if test="type != null and type != 9 and type != 4 and type != 5">
      and `type` = #{type}
    </if>
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != '' ">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
    order by ${orderStatement} ,sort_score desc,`date`desc, create_datetime desc
    LIMIT #{length,jdbcType=INTEGER} OFFSET #{start,jdbcType=INTEGER};
  </select>

  <select id="getUsefulMessageMapperCountByCondition" parameterType="jp.co.vermore.form.admin.UsefulMessageListForm" resultType="int">
    select count(id) as totalCount
    from useful_message
    where del_flg = 0 and `type` between 1 and 3
    <if test="type != null and type != 9 and type != 4 and type != 5">
      and `type` = #{type}
    </if>
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != ''">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
  </select>

  <select id="getUsefulMessageMapperCount" resultType="int">
    select count(id) as totalCount
    from useful_message
    where `type` between 1 and 3 and del_flg = 0;
  </select>

  <select id="getStudioUsefulMessageMapperList" resultMap="BaseResultMap" parameterType="jp.co.vermore.entity.UsefulMessage">
    select
    <include refid="Base_Column_List"/>
    from useful_message
    where del_flg = 0
    <if test="param1 != null">
      and type = #{param1}
    </if>
    and publish_start &lt; #{param3}
    and publish_end &gt;= #{param4}
    order by sort_score desc , `date`desc
    limit 5;
  </select>

  <select id="getStudioUsefulMessageMapperListAll" resultMap="BaseResultMap" parameterType="jp.co.vermore.entity.UsefulMessage">
    select
    <include refid="Base_Column_List"/>
    from useful_message
    where del_flg = 0
    <if test="param1 != null">
      and type = #{param1}
    </if>
    order by sort_score desc , `date`desc
    LIMIT #{param2} OFFSET #{param3};
  </select>

  <select id="getStudioUsefulMessageMapperALL" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from useful_message
    where del_flg = 0
    and type = #{type}
    order by date desc
  </select>

  <select id="getStudioAllByCondition" parameterType="jp.co.vermore.form.admin.UsefulMessageListForm" resultMap="BaseResultMap">
    select *
    from useful_message
    where del_flg = 0
    and type = 5
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != '' ">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
    order by ${orderStatement}
    LIMIT #{length,jdbcType=INTEGER} OFFSET #{start,jdbcType=INTEGER};
  </select>

  <select id="getStudioCountByCondition" parameterType="jp.co.vermore.form.admin.UsefulMessageListForm" resultType="int">
    select count(id) as totalCount
    from useful_message
    where del_flg = 0
    and type = 5
    <if test="date != null">
      and date_format(`date`,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
    </if>
    <if test="sortScore != null and sortScore != ''">
      and sort_score = #{sortScore}
    </if>
    <if test="publishStart != null">
      and date_format(publish_start,'%Y-%m-%d') &gt;= date_format(#{publishStart},'%Y-%m-%d')
    </if>
    <if test="publishEnd != null">
      and date_format(publish_end,'%Y-%m-%d') &lt;= date_format(#{publishEnd},'%Y-%m-%d')
    </if>
  </select>

  <select id="getStudioCount" resultType="int">
    select count(id) as totalCount
    from useful_message
    where del_flg = 0
      and type = 5;
  </select>

  <select id="getUsefulMessageMapperById" resultMap="BaseResultMap">
    SELECT *
    FROM useful_message
    WHERE id = #{id}
      and del_flg = 0;
  </select>



</mapper>